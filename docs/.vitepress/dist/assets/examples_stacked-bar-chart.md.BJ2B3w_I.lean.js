import{_ as t,B as e,c as h,j as i,a as n,G as k,a4 as l,o as p}from"./chunks/framework.BR8Ltzpo.js";const C=JSON.parse('{"title":"Stacked Bar Chart","description":"","frontmatter":{},"headers":[],"relativePath":"examples/stacked-bar-chart.md","filePath":"examples/stacked-bar-chart.md"}'),r={name:"examples/stacked-bar-chart.md"},d={class:"starfish-container"};function E(c,s,g,o,y,F){const a=e("GoFishVue");return p(),h("div",null,[s[1]||(s[1]=i("h1",{id:"stacked-bar-chart",tabindex:"-1"},[n("Stacked Bar Chart "),i("a",{class:"header-anchor",href:"#stacked-bar-chart","aria-label":'Permalink to "Stacked Bar Chart"'},"â€‹")],-1)),i("div",d,[k(a,{code:`StackX({ spacing: 8, sharedScale: true },
  Map(_(catchData).groupBy("lake"), (lake) =>
    StackY({ spacing: 2 },
      Map(lake, (d) =>
        Rect({ w: 32, h: v(d.count), fill: v(d.species) }))))
).render(root, { width: size.width, height: size.height });
`}),s[0]||(s[0]=l(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StackX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ spacing: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sharedScale: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(catchData).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">groupBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lake</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    StackY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ spacing: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lake, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ w: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, h: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.count), fill: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.species) }))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root, { width: size.width, height: size.height });</span></span></code></pre></div>`,1))])])}const u=t(r,[["render",E]]);export{C as __pageData,u as default};
